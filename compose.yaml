networks:
  proj:

services:
  nginx:
    build: ./nginx
    ports:
      - 8080:80
    depends_on:
      - blog
    networks:
      - proj

  db:
    image: postgres
    restart: always
    user: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - proj

  blog:
    build: ./
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./:/app
    expose:
      - 8000
    env_file:
      - ./.env.dev
    depends_on:
      db:
        condition: service_healthy
    develop:
      watch:
        - action: rebuild
          path: .
    networks:
      - proj

volumes:
  db-data:



