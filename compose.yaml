networks:
  proj:

services:
  nginx:
    image: nginx:stable-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/usr/share/nginx/html/static
      - templates_volume:/usr/share/nginx/html/templates
    depends_on:
      - backend
      - frontend
    networks:
      - proj

  db:
    image: postgres
    restart: always
    user: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - proj

  backend:
    build:
      context: ./backend
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - DB_HOST=db
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - static_volume:/app/static
      - templates_volume:/app/blog/templates
    networks:
      - proj

  frontend:
    build:
      context: ./frontend
    networks:
      - proj

volumes:
  db-data:
  static_volume:
  templates_volume:


